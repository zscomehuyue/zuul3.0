buildscript {
    repositories {
//        mavenLocal()
//        mavenCentral()
//        maven { url "https://jitpack.io" }
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url 'http://maven.oschina.net/content/groups/public/' }
//        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
//        maven { url "http://maven.springframework.org/release" }
//        maven { url "http://maven.restlet.org" }
//        maven { url "http://mirrors.ibiblio.org/maven2" }
//        maven { url "http://repo.baichuan-android.taobao.com/content/groups/BaichuanRepositories/"}
//        maven { url 'https://maven.fabric.io/public' }
//        jcenter()
//        google()
    }
    dependencies {
        classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:2.2.0'
    }
}

plugins {
    id 'nebula.netflixoss' version '3.0.0'
}

ext.githubProjectName = rootProject.name


idea {
    project {
        languageLevel = '1.8'
    }
}

configurations.all {
    exclude group: 'asm', module: 'asm'
    exclude group: 'asm', module: 'asm-all'
}


subprojects {
    apply plugin: 'nebula.netflixoss'
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'nebula.provided-base'
    apply plugin: 'nebula.dependency-lock'

    repositories {
        maven { url 'https://oss.jfrog.org/libs-snapshot' }
        jcenter()
    }

    group = "com.netflix.${githubProjectName}"

    sourceCompatibility = '1.8'


    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java']
                include '**/*.java'
            }
            groovy {
                srcDirs = ['src/main/groovy']
                include '**/*.groovy'
            }
        }
        test {
            java {
                srcDirs = ['src/main/java', 'src/test/java']
                include '**/*.java'
            }
            groovy {
                srcDirs = ['filters', 'src/main/groovy']
                include '**/*.groovy'
            }
        }
    }

    javadoc {
        options {
            doclet = "org.benjchristensen.doclet.DocletExclude"
            docletpath = [rootProject.file('./gradle/doclet-exclude.jar')]
            stylesheetFile = rootProject.file('./gradle/javadocStyleSheet.css')
            windowTitle = "Zuul Javadoc ${project.version}"
        }
    }

    eclipse {
        classpath {
            downloadSources = true
            downloadJavadoc = true
        }
    }

    tasks.withType(Javadoc).each {
        it.classpath = sourceSets.main.compileClasspath
    }

    dependencies {
        ext.versions_guice = "4.0"

        // Use guice-4 while debugging a startup error that is hidden by guice-3's lack of java8 lambda support.
        compile(group: 'com.google.inject', name: 'guice', version: "${versions_guice}")
        compile(group: 'com.google.inject.extensions', name: 'guice-multibindings', version: "${versions_guice}")
        compile(group: 'com.google.inject.extensions', name: 'guice-grapher', version: "${versions_guice}")
        compile(group: 'com.google.inject.extensions', name: 'guice-assistedinject', version: "${versions_guice}")
        compile(group: 'com.google.inject.extensions', name: 'guice-servlet', version: "${versions_guice}")
        compile(group: 'com.google.inject.extensions', name: 'guice-throwingproviders', version: "${versions_guice}")
    }


    test {
        testLogging {
            showStandardStreams = true
        }
    }
}
